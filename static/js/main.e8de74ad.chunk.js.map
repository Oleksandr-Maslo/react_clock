{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","timerId","state","today","Date","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","name","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","clockName","hasClock","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,QAAU,EADZ,EAGEC,MAAQ,CACNC,MAAO,IAAIC,MAJf,uDAOE,WAAqB,IAAD,OAClBC,KAAKJ,QAAUK,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEL,MAAO,IAAIC,OAE3BK,QAAQC,KAAK,EAAKR,MAAMC,MAAMQ,cAAcC,OAAO,IAAK,MACvD,OAZP,gCAeE,SAAmBC,GACbA,EAAUC,OAAST,KAAKU,MAAMD,MAEhCL,QAAQO,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDT,KAAKU,MAAMD,SAlBpE,kCAsBE,WACER,OAAOW,cAAcZ,KAAKJ,WAvB9B,oBA0BE,WACE,IAAQE,EAAUE,KAAKH,MAAfC,MAER,OACE,sBAAKe,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGb,KAAKU,MAAMD,OAGb,YAED,sBAAMI,UAAU,cAAhB,SACGf,EAAMQ,cAAcC,OAAO,IAAK,KAElC,IACD,6CAzCR,GAA2BO,aCN3B,SAASC,IACP,IAAMC,EAAQjB,KAAKkB,MAAMC,WAAWX,OAAO,GAE3C,MAAM,SAAN,OAAgBS,GAQX,IAAMG,EAAb,4MACEvB,QAAU,EADZ,EAGEC,MAAQ,CACNuB,UAAW,UACXC,UAAU,GALd,uDAQE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKtB,SAAS,CAAEkB,UAAU,OAG5BC,SAASC,iBAAiB,SAAS,WACjC,EAAKpB,SAAS,CAAEkB,UAAU,OAG5BrB,KAAKJ,QAAUK,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEiB,UAAWL,QAC1B,QApBP,kCAuBE,WACEd,OAAOW,cAAcZ,KAAKJ,WAxB9B,oBA2BE,WACE,MAAgCI,KAAKH,MAA7BwB,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,UAElB,OACE,sBAAKP,UAAU,MAAf,UACE,6CACCQ,GAAY,cAAC,EAAD,CAAOZ,KAAMW,WAjClC,GAAyBN,aCZzBY,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.e8de74ad.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  today: Date,\n};\n\ntype Props = {\n  name: string,\n};\n\nexport class Clock extends Component<Props, State> {\n  timerId = 0;\n\n  state = {\n    today: new Date(),\n  };\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n      // eslint-disable-next-line\n      console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { today } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n        {' '}\n        <span>PM</span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n};\n\nexport class App extends Component<{}, State> {\n  timerId = 0;\n\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}